{"version":3,"sources":["components/Filter/styles.module.scss","components/ContactList/styles.module.scss","components/Form/styles.module.scss","redux/contacts/contacts-action.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-operations.js","components/Form/Form.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","actions","contacts","createReducer","state","action","payload","filter","id","loading","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","axios","defaults","baseURL","name","number","dispatch","post","then","data","catch","error","delete","Form","handleInputChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","find","item","toLowerCase","toast","warning","reset","onSubmit","className","styles","title","this","form","label","text","input","type","onChange","pattern","required","button","content","Component","connect","operations","getVisibleContact","normilizeFilter","includes","onDeleteContact","list","map","onClick","e","contactsActions","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7decaa0c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__2ThQ_\",\"label\":\"styles_label__1EQMF\",\"text\":\"styles_text__H1lwr\",\"input\":\"styles_input__3cObw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"styles_list__xjOlh\",\"item\":\"styles_item__wRJt2\",\"button\":\"styles_button__AJHCf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__1YmCD\",\"form\":\"styles_form__3BTQv\",\"label\":\"styles_label__1Ku7G\",\"input\":\"styles_input__2RtgK\",\"text\":\"styles_text__2Muy-\",\"button\":\"styles_button__3_r4I\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nconst fetchContactsError = createAction('contacts/fetchContactsError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nconst changeFilter = createAction('contacts/ChangeFilter');\n\nexport default {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  changeFilter,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-action';\n\nconst {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} = actions;\n\nconst contacts = createReducer([], {\n  [fetchContactsSuccess]: (state, action) => action.payload,\n  [addContactSuccess]: (state, action) => [...state, action.payload],\n  [deleteContactSuccess]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  deleteContactError,\n  [addContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n\nexport default store;\n","import axios from 'axios';\nimport actions from './contacts-action';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(actions.fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(actions.fetchContactsSuccess(data)))\n    .catch(error => dispatch(actions.fetchContactsError(error)));\n};\n\nconst addContact = ({ name, number }) => dispatch => {\n  const contacts = { name, number };\n\n  dispatch(actions.addContactRequest());\n\n  axios\n    .post('/contacts', contacts)\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\n    .catch(error => dispatch(actions.addContactError(error)));\n};\n\nconst deleteContact = id => dispatch => {\n  dispatch(actions.deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(actions.deleteContactSuccess(id)))\n    .catch(error => dispatch(actions.deleteContactError(error)));\n};\n\nexport default { fetchContacts, addContact, deleteContact };\n","import { Component } from \"react\";\nimport { connect} from 'react-redux';\nimport operations from '../../redux/contacts/contacts-operations';\nimport { toast } from 'react-toastify';\nimport styles from '../Form/styles.module.scss';\n\n\nclass Form extends Component{\n\n    state = {\n        name: '',\n        number: '',\n    }\n    handleInputChange = (event) => {\n        const { name, value } = event.currentTarget;\n        this.setState({\n          [name]: value,\n        });\n      };\n   \n\n      handleSubmit = (event) => {\n        event.preventDefault();\n\n        const { name } = this.state;\n        const { contacts } = this.props;\n        const findContact = contacts.find(\n          (item) => item.name.toLowerCase() === name.toLowerCase()\n        );\n        if (findContact) {\n          toast.warning(`${name} is already in contacts`);\n          this.reset();\n          return;\n        }\n\n        this.props.onSubmit(this.state );\n        this.reset();\n      };\n\n      reset = () => {\n          this.setState({name : '', number : ''})\n      }\n\n    render(){\n        return(<>\n        \n            <h1 className={styles.title}>Phone book</h1>\n            <form onSubmit={this.handleSubmit} className={styles.form}>\n              <label className={styles.label}>\n                <span className={styles.text}>Name</span>\n                <input className={styles.input}\n                  type='text'\n                  name='name'\n                  value={this.state.name}\n                  onChange={this.handleInputChange}\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                  required\n                />\n              </label>\n              <label className={styles.label}>\n                <span className={styles.text}>Phone</span>\n                <input className={styles.input}\n                  type='tel'\n                  name='number'\n                  value={this.state.number}\n                  onChange={this.handleInputChange}\n                  // pattern='(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})'\n                  title='Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +'\n                  required\n                />\n              </label>\n              <button className={styles.button} type='submit'><span className={styles.content}>Add contact</span> </button>\n            </form>\n            \n          </>)\n    }\n}\n\nconst mapStateToProps = ({ contacts: { contacts } }) => ({\n  contacts,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name,number) => dispatch(operations.addContact(name,number))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","import { connect } from 'react-redux'\nimport operations from '../../redux/contacts/contacts-operations';\nimport PropTypes from 'prop-types';\nimport styles from './styles.module.scss'\n\n\nconst ContactList = ({contacts, onDeleteContact }) =>{return (<>\n    <ul className={styles.list} >{contacts.map(({id, name, number}) => <li key={id} className={styles.item}>\n        <p>{name}:</p>\n        <p>{number}</p>\n        <button className={styles.button} onClick={()=> onDeleteContact(id)}>Delete</button>\n        </li>)}\n        </ul> </>);\n    } \n\n    ContactList.propTypes = {\n     onDeleteContact: PropTypes.func.isRequired\n    }\n\n    const getVisibleContact = (contacts ,filter) => {\n    \n        const normilizeFilter = filter.toLowerCase();\n    \n        const filtered = contacts.filter(({name}) =>\n          name.toLowerCase().includes(normilizeFilter),\n        );\n        return  filtered;\n      };\n\n\n    const mapStateToProps = ({contacts: {contacts, filter}}) => ({\n        contacts: getVisibleContact(contacts, filter)\n    })\n    const mapDispatchToProps = dispatch => ({\n        onDeleteContact: (id) => dispatch(operations.deleteContact(id)),\n    })\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-action'\nimport styles from './styles.module.scss'\n\nconst Filter = ({value, onChange}) => {\n    return(<>\n    <h2 className={styles.title}>Contacts</h2>  \n     <label className={styles.label}>\n       <span className={styles.text}>Find contacts by name</span> \n        \n          <input className={styles.input} type='text' value={value} onChange={onChange} />\n        \n      </label> </>)}\n\n      Filter.propTypes = {\n        value: PropTypes.string,\n        onChange: PropTypes.func.isRequired\n      }\n\n      const mapStateToProps = (state) => ({\n         value: state.contacts.filter\n    })\n     const mapDispatchToProps =  dispatch => ({\n       onChange: e => dispatch(contactsActions.changeFilter(e.target.value))\n     })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import Form from './components/Form';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n// import PhoneBook from './components/PhoneBook';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'modern-normalize/modern-normalize.css';\n\nconst App = () => (\n  <>\n    <Form />\n    <Filter />\n    <ContactList />\n    {/* <PhoneBook /> */}\n    <ToastContainer />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}