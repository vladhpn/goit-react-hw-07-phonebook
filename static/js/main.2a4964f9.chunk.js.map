{"version":3,"sources":["components/Filter/styles.module.scss","components/ContactList/styles.module.scss","components/Spinner/styles.module.scss","components/Form/styles.module.scss","redux/contacts/contacts-action.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/Form/Form.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Spinner/Spinner.jsx","App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","actions","contacts","createReducer","_","action","payload","state","filter","id","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","axios","defaults","baseURL","dispatch","get","then","data","catch","error","name","number","post","delete","getContacts","getFilter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","getIsLoading","Form","handleInputChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","find","item","toast","warning","reset","onSubmit","className","styles","title","this","form","label","text","input","type","onChange","pattern","required","button","content","Component","connect","operations","selectors","onDeleteContact","list","map","onClick","e","target","Spinner","color","height","width","App","fetchContacts","isLoadingContacts","dispacth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a4964f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__2ThQ_\",\"label\":\"styles_label__1EQMF\",\"text\":\"styles_text__H1lwr\",\"input\":\"styles_input__3cObw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"styles_list__xjOlh\",\"item\":\"styles_item__wRJt2\",\"button\":\"styles_button__AJHCf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"styles_Spinner__-QfTi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__1YmCD\",\"form\":\"styles_form__3BTQv\",\"label\":\"styles_label__1Ku7G\",\"input\":\"styles_input__2RtgK\",\"text\":\"styles_text__2Muy-\",\"button\":\"styles_button__3_r4I\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nconst fetchContactsError = createAction('contacts/fetchContactsError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nconst changeFilter = createAction('contacts/ChangeFilter');\n\nexport default {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  changeFilter,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-action';\n\nconst {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} = actions;\n\nconst contacts = createReducer([], {\n  [fetchContactsSuccess]: (_, action) => action.payload,\n  [addContactSuccess]: (state, action) => [...state, action.payload],\n  [deleteContactSuccess]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  deleteContactError,\n  [addContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n\nexport default store;\n","import axios from 'axios';\nimport actions from './contacts-action';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(actions.fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(actions.fetchContactsSuccess(data)))\n    .catch(error => dispatch(actions.fetchContactsError(error)));\n};\n\nconst addContact = ({ name, number }) => dispatch => {\n  const contacts = { name, number };\n\n  dispatch(actions.addContactRequest());\n\n  axios\n    .post('/contacts', contacts)\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\n    .catch(error => dispatch(actions.addContactError(error)));\n};\n\nconst deleteContact = id => dispatch => {\n  dispatch(actions.deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(actions.deleteContactSuccess(id)))\n    .catch(error => dispatch(actions.deleteContactError(error)));\n};\n\nexport default { fetchContacts, addContact, deleteContact };\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContacts = state => state.contacts.contacts;\nconst getFilter = state => state.contacts.filter;\nconst getIsLoading = state => state.contacts.loading;\nconst getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\nexport default { getContacts, getFilter, getVisibleContacts, getIsLoading };\n","import { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { operations } from '../../redux/contacts';\nimport { toast } from 'react-toastify';\nimport styles from '../Form/styles.module.scss';\n\n\nclass Form extends Component{\n\n    state = {\n        name: '',\n        number: '',\n    }\n\n    handleInputChange = (event) => {\n        const { name, value } = event.currentTarget;\n        this.setState({\n          [name]: value,\n        });\n      };\n   \n\n      handleSubmit = (event) => {\n        event.preventDefault();\n\n        const { name } = this.state;\n        const { contacts } = this.props;\n        const findContact = contacts.find(\n          (item) => item.name.toLowerCase() === name.toLowerCase()\n        );\n        if (findContact) {\n          toast.warning(`${name} is already in contacts`);\n          this.reset();\n          return;\n        }\n\n        this.props.onSubmit(this.state );\n        this.reset();\n      };\n\n      reset = () => {\n          this.setState({name : '', number : ''})\n      }\n\n   \n\n    render(){\n        return(<>\n        \n            <h1 className={styles.title}>Phone book</h1>\n            <form onSubmit={this.handleSubmit} className={styles.form}>\n              <label className={styles.label}>\n                <span className={styles.text}>Name</span>\n                <input className={styles.input}\n                  type='text'\n                  name='name'\n                  value={this.state.name}\n                  onChange={this.handleInputChange}\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                  required\n                />\n              </label>\n              <label className={styles.label}>\n                <span className={styles.text}>Phone</span>\n                <input className={styles.input}\n                  type='tel'\n                  name='number'\n                  value={this.state.number}\n                  onChange={this.handleInputChange}\n                  // pattern='(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})'\n                  title='Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +'\n                  required\n                />\n              </label>\n              <button className={styles.button} type='submit'><span className={styles.content}>Add contact</span> </button>\n            </form>\n            \n          </>)\n    }\n}\n\nconst mapStateToProps = ({ contacts: { contacts } }) => ({\n  contacts,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name,number) => dispatch(operations.addContact(name,number)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","import { connect } from 'react-redux'\nimport { operations, selectors } from '../../redux/contacts';\nimport PropTypes from 'prop-types';\nimport styles from './styles.module.scss'\n\n\nconst ContactList = ({contacts, onDeleteContact }) =>{return (<>\n    <ul className={styles.list} >{contacts.map(({id, name, number}) => <li key={id} className={styles.item}>\n        <p>{name}:</p>\n        <p>{number}</p>\n        <button className={styles.button} onClick={()=> onDeleteContact(id)}>Delete</button>\n        </li>)}\n        </ul> </>);\n    } \n\n    ContactList.propTypes = {\n     onDeleteContact: PropTypes.func.isRequired\n    }\n\n      const mapStateToProps = state => ({\n        contacts: selectors.getVisibleContacts(state)\n    })\n    const mapDispatchToProps = dispatch => ({\n        onDeleteContact: (id) => dispatch(operations.deleteContact(id)),\n    })\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { action, selectors } from '../../redux/contacts'\nimport styles from './styles.module.scss'\n\nconst Filter = ({value, onChange}) => {\n    return(<>\n    <h2 className={styles.title}>Contacts</h2>  \n     <label className={styles.label}>\n       <span className={styles.text}>Find contacts by name</span> \n        \n          <input className={styles.input} type='text' value={value} onChange={onChange} />\n        \n      </label> </>)}\n\n      Filter.propTypes = {\n        value: PropTypes.string,\n        onChange: PropTypes.func.isRequired\n      }\n\n      const mapStateToProps = (state) => ({\n         value: selectors.getFilter(state)\n    })\n     const mapDispatchToProps =  dispatch => ({\n       onChange: e => dispatch(action.changeFilter(e.target.value))\n     })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport styles from './styles.module.scss'\n\nfunction Spinner() {\n  return(<Loader className={styles.Spinner} type=\"Rings\" color=\"#00BFFF\" height={80} width={80} />\n)}  \n\nexport default Spinner;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Form from './components/Form';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport { ToastContainer } from 'react-toastify';\nimport { operations, selectors } from './redux/contacts';\nimport Spinner from './components/Spinner';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'modern-normalize/modern-normalize.css';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n  render() {\n    return (\n      <>\n        <Form />\n        <Filter />\n        {this.props.isLoadingContacts ? <Spinner /> : <ContactList />}\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoadingContacts: selectors.getIsLoading(state),\n});\n\nconst mapDispatchToProps = dispacth => ({\n  fetchContacts: () => dispacth(operations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}